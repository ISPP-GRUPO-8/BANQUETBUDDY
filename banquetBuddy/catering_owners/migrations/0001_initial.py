# Generated by Django 4.2.7 on 2024-03-10 18:44

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_remove_cateringservice_cateringcompany_and_more'),
        ('catering_particular', '0001_initial'),
        ('catering_employees', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CateringCompany',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='CateringCompanyusername', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('company_name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=200)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('cif', models.CharField(max_length=20)),
                ('verification_document', models.FileField(upload_to='verification_documents/')),
                ('is_verified', models.BooleanField(default=False)),
                ('service_description', models.TextField(blank=True)),
                ('logo', models.BinaryField(blank=True, null=True)),
                ('cuisine_type', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, null=True, size=None)),
                ('price_plan', models.CharField(choices=[('BASE', 'Base'), ('PREMIUM', 'Premium'), ('PREMIUM_PRO', 'Premium Pro'), ('NO_SUBSCRIBED', 'No Subscribed')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CateringService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('location', models.CharField(max_length=255)),
                ('capacity', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cateringcompany', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cateringCompany', to='catering_owners.cateringcompany')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('details', models.TextField()),
                ('booking_state', models.CharField(choices=[('CONFIRMED', 'Confirmed'), ('CONTRACT_PENDING', 'Contract Pending'), ('CANCELLED', 'Cancelled')], max_length=50)),
                ('number_guests', models.IntegerField()),
                ('cateringservice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='catering_owners.cateringservice')),
                ('particular', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catering_particular.particular')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('assignment_date', models.DateField()),
                ('assignment_state', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed')], max_length=50)),
                ('expiration_date', models.DateField()),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High')], max_length=50)),
                ('cateringservice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catering_owners.cateringservice')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event', to='catering_owners.event')),
            ],
        ),
        migrations.CreateModel(
            name='TaskEmployee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_employees', to='catering_employees.employee')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_employees', to='catering_owners.task')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField()),
                ('description', models.TextField()),
                ('date', models.DateField()),
                ('cateringservice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='catering_owners.cateringservice')),
                ('particular', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='catering_particular.particular')),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('requirements', models.TextField()),
                ('location', models.CharField(max_length=255)),
                ('cateringservice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='catering_owners.cateringservice')),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('plates', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, null=True, size=None)),
                ('diet_restrictions', models.CharField(max_length=255)),
                ('cateringservice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menus', to='catering_owners.cateringservice')),
            ],
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_application', models.DateField()),
                ('state', models.CharField(choices=[('PENDING', 'Pending'), ('IN_REVIEW', 'In Review'), ('ACCEPTED', 'Accepted')], max_length=50)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_applications', to='catering_employees.employee')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_applications', to='catering_owners.offer')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeWorkService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cateringservice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_work_services', to='catering_owners.cateringservice')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_work_services', to='catering_employees.employee')),
            ],
        ),
        migrations.AddConstraint(
            model_name='task',
            constraint=models.CheckConstraint(check=models.Q(('assignment_date__lt', models.F('expiration_date'))), name='assignment_before_expiration'),
        ),
        migrations.AddConstraint(
            model_name='review',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='rating_range'),
        ),
    ]
